{"version":3,"sources":["ApiClient.js","Commission.js","App.js","serviceWorker.js","index.js"],"names":["ApiClient","response","status","Promise","resolve","reject","Error","statusText","hotspot","startDate","endDate","console","log","name","this","getRequest","address","input","url","axios","get","then","catch","error","Commission","apiClient","useState","stats","cStats","helium","cHelium","rate","cRate","percent","cPercent","search","cSearch","cHotspot","Date","setStartDate","setEndDate","updateHelium","price","updateHotspotList","event","preventDefault","document","getElementById","value","runSearch","res","data","split","join","setRate","getExchange","map","current","currency","refreshStats","getPayout","toLocaleDateString","total","toFixed","host","from","meta","min_time","to","max_time","getHelium","useEffect","Table","Nav","Item","Link","target","href","dateFormat","selected","onChange","date","style","color","type","e","Button","variant","onClick","Form","id","placeholder","DropdownButton","menuVariant","title","names","index","Dropdown","key","as","docapitalize","replace","m","toUpperCase","updateHotspot","Navb","Navbar","bg","Container","Brand","className","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.21c23a3b.chunk.js","sourcesContent":["//axios handles api operation get set delete on the database\r\nimport axios from \"axios\";\r\n\r\nexport class ApiClient {\r\n  status(response) {\r\n    //code in this range are typically good responses\r\n    if (response.status >= 200 && response.status < 300) {\r\n      //say it is resovled\r\n      return Promise.resolve(response);\r\n    } else {\r\n      //returns Error object as text i.e 404 Not found\r\n      return Promise.reject(new Error(response.statusText));\r\n    }\r\n  }\r\n\r\n  getPayout(hotspot, startDate, endDate) {\r\n    console.log(\"hotspot\", hotspot);\r\n    console.log(\"hotspot name\", hotspot.name);\r\n    console.log(\"start date\", startDate);\r\n    console.log(\"end date\", endDate);\r\n    return this.getRequest(\r\n      `https://api.helium.io/v1/hotspots/${hotspot.address}/rewards/sum?max_time=${endDate}T23:59:59Z&min_time=${startDate}T00:00:00Z`\r\n    );\r\n  }\r\n\r\n  getHelium() {\r\n    return this.getRequest(\r\n      `https://api.nomics.com/v1/currencies/ticker?ids=HELIUM&key=548a0234c688c38923ef390762798f09bad21729`\r\n    );\r\n  }\r\n\r\n  getExchange() {\r\n    return this.getRequest(\r\n      `https://api.nomics.com/v1/exchange-rates?key=548a0234c688c38923ef390762798f09bad21729`\r\n    );\r\n  }\r\n\r\n  runSearch(input) {\r\n    return this.getRequest(\r\n      `https://api.helium.io/v1/hotspots/name?search=${input}`\r\n    );\r\n  }\r\n\r\n  getRequest(url) {\r\n    return axios\r\n      .get(url)\r\n      .then(this.status)\r\n      .catch(function (error) {\r\n        // handle error\r\n        console.error(error);\r\n        // alert(error)\r\n      });\r\n  }\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { ApiClient } from \"./ApiClient\";\r\nimport Table from \"react-bootstrap/Table\";\r\nimport Nav from \"react-bootstrap/Nav\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Dropdown from \"react-bootstrap/Dropdown\";\r\nimport DropdownButton from \"react-bootstrap/DropdownButton\";\r\n\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\n\r\nfunction Commission() {\r\n  // const accountLink = \"https://explorer.helium.com/accounts/\";\r\n  const hotspotLink = \"https://explorer.helium.com/hotspots/\";\r\n  const apiClient = new ApiClient();\r\n  const [stats, cStats] = useState({});\r\n  const [helium, cHelium] = useState(0);\r\n  const [rate, cRate] = useState(0);\r\n  const [percent, cPercent] = useState(0);\r\n  const [search, cSearch] = useState([\"\"]);\r\n  // const [account, cAccount] = useState({\r\n  //   address: \"14pdsYdHs738B84vKdHWrbSKyL5TfagyJekFwxZBnnigiRLN6fV\",\r\n  // });\r\n  const [hotspot, cHotspot] = useState({\r\n    name: \"Delightful Walnut Starling\",\r\n    address: \"112KWyajxjigtBZQyHUzqGtUjAFPWaE4uCWpqzbJWs5pYqZZajvL\",\r\n  });\r\n  const [startDate, setStartDate] = useState(new Date());\r\n  const [endDate, setEndDate] = useState(new Date());\r\n\r\n  const updateStats = (response) => {\r\n    cStats({\r\n      total: response.data.total.toFixed(2),\r\n      host: ((response.data.total / 100) * percent).toFixed(2),\r\n      from: response.meta.min_time,\r\n      to: response.meta.max_time,\r\n    });\r\n    apiClient\r\n      .getHelium()\r\n      .then((res) => {\r\n        updateHelium(res.data[0]);\r\n        console.log(`refresh Helium array`, res.data);\r\n      })\r\n      .catch((error) => {\r\n        console.error(error);\r\n      });\r\n  };\r\n\r\n  const updateHelium = (response) => {\r\n    cHelium(response.price);\r\n    console.log(response.price);\r\n  };\r\n\r\n  const runSearch = (input) => {\r\n    apiClient\r\n      .runSearch(input)\r\n      .then((res) => {\r\n        cSearch(res.data.data);\r\n        console.log(`search array`, res.data.data);\r\n      })\r\n      .catch((error) => {\r\n        console.error(error);\r\n      });\r\n  };\r\n\r\n  const updateHotspotList = (event) => {\r\n    event.preventDefault();\r\n    let input = document.getElementById(\"searchHotspot\").value;\r\n    input = input.split(\" \").join(\"-\");\r\n    runSearch(input);\r\n    console.log(`input is`, input);\r\n    document.getElementById(\"searchHotspot\").value = \"\";\r\n    // console.log(`event is`, event);\r\n    // console.log(`event is`, event.target);\r\n    // console.log(`event is`, event.target.value);\r\n    // console.log(`event is`, event.searchHotspot);\r\n  };\r\n\r\n  const updateHotspot = (names) => {\r\n    let dosplit = names.name.split(\"-\").join(\" \");\r\n    let docapitalize = dosplit.replace(/(^\\w|\\s\\w)/g, (m) => m.toUpperCase());\r\n    console.log(`names`, docapitalize);\r\n    console.log(`address`, names.address);\r\n    cHotspot({\r\n      name: docapitalize,\r\n      address: names.address,\r\n    });\r\n  };\r\n\r\n  const updateRate = (response) => {\r\n    response.map((current) =>\r\n      current.currency === \"GBP\" ? cRate(current.rate) : rate\r\n    );\r\n  };\r\n\r\n  const setRate = () => {\r\n    apiClient\r\n      .getExchange()\r\n      .then((res) => {\r\n        updateRate(res.data);\r\n        // console.log(`refresh Exchange array`, res.data);\r\n      })\r\n      .catch((error) => {\r\n        console.error(error);\r\n      });\r\n  };\r\n\r\n  const refreshStats = () => {\r\n    apiClient\r\n      .getPayout(\r\n        hotspot,\r\n        startDate.toLocaleDateString(\"sv-SE\"),\r\n        endDate.toLocaleDateString(\"sv-SE\")\r\n      )\r\n      .then((res) => {\r\n        updateStats(res.data);\r\n        console.log(`refresh Accounts array`, res.data);\r\n      })\r\n      .catch((error) => {\r\n        console.error(error);\r\n      });\r\n  };\r\n\r\n  const buildPayouts = () => {\r\n    return (\r\n      <Table>\r\n        <thead>\r\n          <tr>\r\n            <th>Current HNT Price</th>\r\n            <th>£{(helium / rate).toFixed(2)}</th>\r\n            <th></th>\r\n            <th></th>\r\n            <th></th>\r\n            <th></th>\r\n          </tr>\r\n          <tr>\r\n            <th>Account</th>\r\n            <th>From</th>\r\n            <th>To</th>\r\n            <th>Host(%)</th>\r\n            <th>Host Share</th>\r\n            <th>Total</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr>\r\n            <td>\r\n              <Nav.Item>\r\n                <Nav.Link target=\"_blank\" href={hotspotLink + hotspot.address}>\r\n                  {hotspot.name}\r\n                </Nav.Link>\r\n              </Nav.Item>\r\n            </td>\r\n            <td>\r\n              <DatePicker\r\n                dateFormat=\"dd-MM-yyyy\"\r\n                selected={startDate}\r\n                onChange={(date) => setStartDate(date)}\r\n              >\r\n                <div style={{ color: \"red\" }}>Start Date!</div>\r\n              </DatePicker>\r\n            </td>\r\n            <td>\r\n              <DatePicker\r\n                dateFormat=\"dd-MM-yyyy\"\r\n                selected={endDate}\r\n                onChange={(date) => setEndDate(date)}\r\n              >\r\n                <div style={{ color: \"red\" }}>End Date!</div>\r\n              </DatePicker>\r\n            </td>\r\n            {/* <td>{percent}</td> */}\r\n            <td>\r\n              <input\r\n                type=\"number\"\r\n                onChange={(e) => cPercent(e.target.value)}\r\n              ></input>\r\n            </td>\r\n            <td>{stats.host}HNT</td>\r\n            <td>{stats.total}HNT</td>\r\n          </tr>\r\n          <tr>\r\n            <td></td>\r\n            <td></td>\r\n            <td></td>\r\n            <td></td>\r\n            <td>£{((stats.host * helium) / rate).toFixed(2)}</td>\r\n            <td>£{((stats.total * helium) / rate).toFixed(2)}</td>\r\n          </tr>\r\n        </tbody>\r\n      </Table>\r\n    );\r\n  };\r\n\r\n  const buildHotspotList = () => {\r\n    if (search != \"\") {\r\n      return (\r\n        <DropdownButton\r\n          menuVariant=\"dark\"\r\n          id=\"dropdown-item-button\"\r\n          title=\"Select your hotspot\"\r\n        >\r\n          {search.map((names, index) => (\r\n            <Dropdown.Item\r\n              key={index}\r\n              as=\"button\"\r\n              onClick={() => updateHotspot(names)}\r\n            >\r\n              {names.name}\r\n            </Dropdown.Item>\r\n          ))}\r\n        </DropdownButton>\r\n      );\r\n    } else {\r\n      return console.log(\"search currently empty\");\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    setRate();\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      {buildPayouts()};\r\n      <Button variant=\"primary\" type=\"submit\" onClick={() => refreshStats()}>\r\n        Update Page\r\n      </Button>\r\n      <Form>\r\n        <input\r\n          type=\"text\"\r\n          id=\"searchHotspot\"\r\n          name=\"searchHotspot\"\r\n          placeholder=\"Enter Hotspot Name\"\r\n        />\r\n        <Button\r\n          variant=\"primary\"\r\n          type=\"submit\"\r\n          onClick={(event) => updateHotspotList(event)}\r\n        >\r\n          Search\r\n        </Button>\r\n      </Form>\r\n      {buildHotspotList()};\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Commission;\r\n","import React from \"react\";\r\nimport Commission from \"./Commission\";\r\nimport Navbar from \"react-bootstrap/Navbar\";\r\nimport Nav from \"react-bootstrap/Nav\";\r\nimport Container from \"react-bootstrap/Container\";\r\n\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\n\r\nfunction Navb() {\r\n  return (\r\n    <>\r\n      <Navbar bg=\"primary\" variant=\"dark\">\r\n        <Container>\r\n          <Navbar.Brand href=\"#home\">Navbar</Navbar.Brand>\r\n          <Nav className=\"me-auto\">\r\n            <Nav.Link href=\"#home\">Home</Nav.Link>\r\n            <Nav.Link href=\"#features\">Features</Nav.Link>\r\n            <Nav.Link href=\"#pricing\">Pricing</Nav.Link>\r\n          </Nav>\r\n        </Container>\r\n      </Navbar>\r\n    </>\r\n  );\r\n}\r\n\r\nfunction App() {\r\n  return (\r\n    <>\r\n      <Navb />\r\n      <br />\r\n\r\n      <Commission />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}